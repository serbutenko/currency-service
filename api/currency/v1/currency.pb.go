// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/currency/v1/currency.proto

package currencyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // код валюты ISO-4217, например "USD"
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // код валюты ISO-4217, например "EUR"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRateRequest) Reset() {
	*x = GetRateRequest{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateRequest) ProtoMessage() {}

func (x *GetRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateRequest.ProtoReflect.Descriptor instead.
func (*GetRateRequest) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{0}
}

func (x *GetRateRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetRateRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type ConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // код валюты ISO-4217, например "USD"
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // код валюты ISO-4217, например "EUR"
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertRequest) Reset() {
	*x = ConvertRequest{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertRequest) ProtoMessage() {}

func (x *ConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertRequest.ProtoReflect.Descriptor instead.
func (*ConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{1}
}

func (x *ConvertRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ConvertRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ConvertRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ListCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesRequest) Reset() {
	*x = ListCurrenciesRequest{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesRequest) ProtoMessage() {}

func (x *ListCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*ListCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{2}
}

type GetRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Rate          float64                `protobuf:"fixed64,3,opt,name=rate,proto3" json:"rate,omitempty"`         // курс (скаляр)
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // ISO8601 в UTC, например "2025-07-24T10:15:00Z"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRateResponse) Reset() {
	*x = GetRateResponse{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateResponse) ProtoMessage() {}

func (x *GetRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateResponse.ProtoReflect.Descriptor instead.
func (*GetRateResponse) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{3}
}

func (x *GetRateResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetRateResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetRateResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *GetRateResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ConvertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Converted     float64                `protobuf:"fixed64,4,opt,name=converted,proto3" json:"converted,omitempty"`
	Rate          float64                `protobuf:"fixed64,5,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertResponse) Reset() {
	*x = ConvertResponse{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertResponse) ProtoMessage() {}

func (x *ConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertResponse.ProtoReflect.Descriptor instead.
func (*ConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{4}
}

func (x *ConvertResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ConvertResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ConvertResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ConvertResponse) GetConverted() float64 {
	if x != nil {
		return x.Converted
	}
	return 0
}

func (x *ConvertResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ListCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    map[string]string      `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesResponse) Reset() {
	*x = ListCurrenciesResponse{}
	mi := &file_api_currency_v1_currency_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesResponse) ProtoMessage() {}

func (x *ListCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_currency_v1_currency_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*ListCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_api_currency_v1_currency_proto_rawDescGZIP(), []int{5}
}

func (x *ListCurrenciesResponse) GetCurrencies() map[string]string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

var File_api_currency_v1_currency_proto protoreflect.FileDescriptor

const file_api_currency_v1_currency_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/currency/v1/currency.proto\x12\vcurrency.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"4\n" +
	"\x0eGetRateRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\"L\n" +
	"\x0eConvertRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"\x17\n" +
	"\x15ListCurrenciesRequest\"\x83\x01\n" +
	"\x0fGetRateResponse\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x01R\x04rate\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x7f\n" +
	"\x0fConvertResponse\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1c\n" +
	"\tconverted\x18\x04 \x01(\x01R\tconverted\x12\x12\n" +
	"\x04rate\x18\x05 \x01(\x01R\x04rate\"\xac\x01\n" +
	"\x16ListCurrenciesResponse\x12S\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v23.currency.v1.ListCurrenciesResponse.CurrenciesEntryR\n" +
	"currencies\x1a=\n" +
	"\x0fCurrenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xfe\x01\n" +
	"\x0fCurrencyService\x12F\n" +
	"\aGetRate\x12\x1b.currency.v1.GetRateRequest\x1a\x1c.currency.v1.GetRateResponse\"\x00\x12F\n" +
	"\aConvert\x12\x1b.currency.v1.ConvertRequest\x1a\x1c.currency.v1.ConvertResponse\"\x00\x12[\n" +
	"\x0eListCurrencies\x12\".currency.v1.ListCurrenciesRequest\x1a#.currency.v1.ListCurrenciesResponse\"\x00B9Z7example.com/currency-service/api/currency/v1;currencyv1b\x06proto3"

var (
	file_api_currency_v1_currency_proto_rawDescOnce sync.Once
	file_api_currency_v1_currency_proto_rawDescData []byte
)

func file_api_currency_v1_currency_proto_rawDescGZIP() []byte {
	file_api_currency_v1_currency_proto_rawDescOnce.Do(func() {
		file_api_currency_v1_currency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_currency_v1_currency_proto_rawDesc), len(file_api_currency_v1_currency_proto_rawDesc)))
	})
	return file_api_currency_v1_currency_proto_rawDescData
}

var file_api_currency_v1_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_currency_v1_currency_proto_goTypes = []any{
	(*GetRateRequest)(nil),         // 0: currency.v1.GetRateRequest
	(*ConvertRequest)(nil),         // 1: currency.v1.ConvertRequest
	(*ListCurrenciesRequest)(nil),  // 2: currency.v1.ListCurrenciesRequest
	(*GetRateResponse)(nil),        // 3: currency.v1.GetRateResponse
	(*ConvertResponse)(nil),        // 4: currency.v1.ConvertResponse
	(*ListCurrenciesResponse)(nil), // 5: currency.v1.ListCurrenciesResponse
	nil,                            // 6: currency.v1.ListCurrenciesResponse.CurrenciesEntry
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_api_currency_v1_currency_proto_depIdxs = []int32{
	7, // 0: currency.v1.GetRateResponse.timestamp:type_name -> google.protobuf.Timestamp
	6, // 1: currency.v1.ListCurrenciesResponse.currencies:type_name -> currency.v1.ListCurrenciesResponse.CurrenciesEntry
	0, // 2: currency.v1.CurrencyService.GetRate:input_type -> currency.v1.GetRateRequest
	1, // 3: currency.v1.CurrencyService.Convert:input_type -> currency.v1.ConvertRequest
	2, // 4: currency.v1.CurrencyService.ListCurrencies:input_type -> currency.v1.ListCurrenciesRequest
	3, // 5: currency.v1.CurrencyService.GetRate:output_type -> currency.v1.GetRateResponse
	4, // 6: currency.v1.CurrencyService.Convert:output_type -> currency.v1.ConvertResponse
	5, // 7: currency.v1.CurrencyService.ListCurrencies:output_type -> currency.v1.ListCurrenciesResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_currency_v1_currency_proto_init() }
func file_api_currency_v1_currency_proto_init() {
	if File_api_currency_v1_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_currency_v1_currency_proto_rawDesc), len(file_api_currency_v1_currency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_currency_v1_currency_proto_goTypes,
		DependencyIndexes: file_api_currency_v1_currency_proto_depIdxs,
		MessageInfos:      file_api_currency_v1_currency_proto_msgTypes,
	}.Build()
	File_api_currency_v1_currency_proto = out.File
	file_api_currency_v1_currency_proto_goTypes = nil
	file_api_currency_v1_currency_proto_depIdxs = nil
}
